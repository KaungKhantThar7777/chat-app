// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String   @default("")
  password  String
  createdAt DateTime @default(now())

  messages Message[]
  chats    ChatUser[]
  reactions Reaction[]
}

model Chat {
  id String @id @default(uuid())

  createdAt DateTime @default(now())

  updatedAt DateTime @updatedAt

  users ChatUser[]

  messages Message[]
}

model Message {
  id       String @id @default(uuid())
  content  String
  senderId String
  sender   User   @relation(fields: [senderId], references: [id])

  chatId String
  chat   Chat   @relation(fields: [chatId], references: [id])

  reactions Reaction[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ChatUser {
  user   User   @relation(fields: [userId], references: [id])
  userId String

  chat   Chat   @relation(fields: [chatId], references: [id])
  chatId String

  @@id([userId, chatId])
}


model Reaction {
  id String @id @default(uuid())
  emoji String

  userId String
  user User @relation(fields: [userId], references: [id])
  messageId String
  message Message @relation(fields: [messageId], references: [id])


  createdAt DateTime @default(now())

  @@unique([userId, messageId, emoji])

}